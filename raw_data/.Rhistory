tbl_summary(
by = treatment,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
label = age ~ "Patient Age") %>%
add_p(test = all_continuous() ~ "t.test",
pvalue_fun = function(x) style_pvalue(x, digits = 2))
tabletest <- baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(
by = treatment,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
label = age ~ "Patient Age") %>%
add_p(test = all_continuous() ~ "t.test",
pvalue_fun = function(x) style_pvalue(x, digits = 2))
baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(by = treatment, statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)")) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_footnote(
all_stat_cols() ~ "Median (IQR) or Frequency (%)"
) %>%
modify_caption("**Descriptive Characteristics**")
baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(by = treatment, statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)")) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_caption("**Descriptive Characteristics**")
baseline$gender<- factor(baseline$gender,
labels = c("Women", "Men"))
baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(by = treatment, statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)")) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_caption("**Descriptive Characteristics**")
baseline <- subset(lab2.data, time==0)
attr(baseline$sbp,'label')  <- "Systolic Blood Pressure"
attr(baseline$age,'label')  <- "Age"
attr(baseline$gender,'label')  <- "Gender"
attr(baseline$stress_baseline,'label')  <- "Stress baseline"
attr(baseline$stress,'label')  <- "Stress"
attr(baseline$treatment,'label')  <- "Treatment"
baseline$gender<- factor(baseline$gender,
labels = c("Women", "Men"))
baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(by = treatment, statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)")) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_caption("**Descriptive Characteristics**")
baseline$gender<- factor(baseline$gender,
labels = c("Women", "Men"))
baseline$stress<- factor(baseline$stress_baseline)
baseline %>%
select(sbp, age, treatment,  gender, stress_baseline) %>%
tbl_summary(by = treatment, statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)")) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_caption("**Descriptive Characteristics**")
table1<- baseline %>%
select(sbp, age, treatment,  gender, stress_baseline, stress) %>%
tbl_summary(by = treatment) %>%
add_p(pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
add_overall() %>%
add_n() %>%
modify_header(label ~ "**Variable**") %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Treatment Received**") %>%
modify_footnote(
all_stat_cols() ~ "Median (IQR) or Frequency (%)"
) %>%
modify_caption("**Descriptive Characteristics**")
install.packages("huxtable")
library(huxtable)
graph1 <- ggplot(baseline, aes(x = age, y = sbp)) +
geom_point()+
geom_smooth(method = "lm") +
scale_y_continuous(name = "Systolic Blood Pressure ") +
scale_x_continuous(name = "Age group") +
ggtitle("SBP and Age") +
theme_bw() +
theme(plot.title = element_text(size = 14,  face = "bold"),
text = element_text(size = 12),
axis.title = element_text(face="bold"),
axis.text.x=element_text(size = 11)) +
scale_fill_brewer(palette = "Accent")
graph1
graph1
baseline$gender<- factor(baseline$gender,
labels = c("Women", "Men"))
graph2 <- ggplot(baseline, aes(x = gender, y = sbp)) +
geom_boxplot(alpha=0.7) +
scale_y_continuous(name = "Systolic Blood Pressure ") +
scale_x_discrete(name = "Gender") +
ggtitle("SBP and Gender") +
theme_bw() +
theme(plot.title = element_text(size = 14,  face = "bold"),
text = element_text(size = 12),
axis.title = element_text(face="bold"),
axis.text.x=element_text(size = 11)) +
scale_fill_brewer(palette = "Accent")
graph2
graph2
baseline$stress<- factor(baseline$stress)
graph3 <- ggplot(baseline, aes(x = stress, y = sbp)) +
geom_boxplot(alpha=0.7) +
scale_y_continuous(name = "Systolic Blood Pressure ") +
scale_x_discrete(name = "Stress") +
ggtitle("SBP and Stress") +
theme_bw() +
theme(plot.title = element_text(size = 14,  face = "bold"),
text = element_text(size = 12),
axis.title = element_text(face="bold"),
axis.text.x=element_text(size = 11)) +
scale_fill_brewer(palette = "Accent")
graph3
graph4 <- ggplot(baseline, aes(x = stress_baseline, y = sbp)) +
geom_point()+
geom_smooth(method = "lm") +
scale_y_continuous(name = "Systolic Blood Pressure ") +
scale_x_continuous(name = "Stress") +
ggtitle("SBP and Stress") +
theme_bw() +
theme(plot.title = element_text(size = 14,  face = "bold"),
text = element_text(size = 12),
axis.title = element_text(face="bold"),
axis.text.x=element_text(size = 11)) +
scale_fill_brewer(palette = "Accent")
graph4
graph3
graph4
summary(lm(sbp ~ treatment + time + treatment*time , data=lab2.data))
summary(lm(sbp ~ treatment + time + treatment*time + age + gender + stress_baseline , data=lab2.data))
summary(lm(sbp ~ treatment + time + treatment*time + age + gender + stress , data=lab2.data))
m2 <- lm(sbp ~ treatment + time + treatment*time + age + gender + stress_baseline , data=lab2.data)
summary(m2)
confint(m2, level=0.95)
m1 <- lm(sbp ~ treatment + time + treatment*time , data=lab2.data)
summary(m1)
m1 <- lm(sbp ~ treatment + time + treatment*time , data=lab2.data)
summary(m1)
confint(m1, level=0.95)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('ipw')
library(ipw)
a <- c(0,1,0,1,0,1,0,1) #a binary exposure
b <- c(0,0,1,1,0,0,1,1) #a binary confounder
c <- c(0,0,0,0,1,1,1,1) #another binary confounder
n <- c(240,120,90,15,101,92,3,90)  #number of subjects per cell
q1 <- data.frame(a,b,c,n)
ftable(xtabs(n ~ b+c+a, data=q1)) # table with all the data
ftable(xtabs(n ~ b+c, data=subset(q1, a==0))) # table with the unexposed
ftable(xtabs(n ~ b+c, data=subset(q1, a==1))) # table with the exposed
View(q1)
#Exposed
#b=0 & c=0
w1 <- 120/752
w1
#b=0 & c=1
#b=1 & c=0
#b=1 & c=1
#Unexposed
c. Based on your weights and the data, do you have any concerns about extreme weights? If no, why not? If yes, what is giving rise to the extreme weights? How would you deal with them?
#Exposed
#b=0 & c=0
w1 <- 120/752
w1
#b=0 & c=1
#b=1 & c=0
#b=1 & c=1
#Unexposed
# Among Exposed
#b=0 & c=0
w1 <- 120/360
w1
iptw1 <- 1/w1
iptw1
#b=0 & c=1
w2 <- 92/553
w2
iptw2 <- 1/w2
iptw2
#b=1 & c=0
w3 <- 15/298
w3
iptw3 <- 1/w3
iptw3
#b=1 & c=1
w4 <- 90/198
w4
iptw4 <- 1/w4
iptw4
#Unexposed
# Among Exposed
#b=0 & c=0
w1 <- 120/360
# P(Y=1 |a=1, b=0, c=0)
w1
iptw1 <- 1/w1
# IPTW1 among Exposed
iptw1
#b=0 & c=1
# P(Y=1 |a=1, b=0, c=1)
w2 <- 92/553
w2
# IPTW2 among Exposed
iptw2 <- 1/w2
iptw2
#b=1 & c=0
# P(Y=1 |a=1, b=1, c=0)
w3 <- 15/298
w3
# IPTW3 among Exposed
iptw3 <- 1/w3
iptw3
#b=1 & c=1
# P(Y=1 |a=1, b=1, c=1)
w4 <- 90/198
w4
# IPTW4 among Exposed
iptw4 <- 1/w4
iptw4
#Unexposed
#b=0 & c=0
w1 <- 240/360
# P(Y=1 |a=1, b=0, c=0)
w1
iptw1 <- 1/w1
# IPTW1 among Unexposed
iptw1
#b=0 & c=1
# P(Y=1 |a=1, b=0, c=1)
w2 <- 101/553
w2
# IPTW2 among Unexposed
iptw2 <- 1/w2
iptw2
#b=1 & c=0
# P(Y=1 |a=1, b=1, c=0)
w3 <- 90/298
w3
# IPTW3 among Unexposed
iptw3 <- 1/w3
iptw3
#b=1 & c=1
# P(Y=1 |a=1, b=1, c=1)
w4 <- 3/198
w4
# IPTW4 among Unexposed
iptw4 <- 1/w4
iptw4
setwd("G:\\My Drive\\PhD Program\\3_Fall 2021\\Advanced Epidemiology II\\HW\\HW4")
# ed: 0 = did not use ED, 1 = used ED
# eviction: 0 = not evicted, 1 = evicted
# isolation: social isolation index (continuous)
# uninsured: 1 = lost health insurance after eviction, 0 = did not
# poor_health: 1 = poor health preceeding eviction, 0 = no poor health
lab4.data <- read.csv('lab4.csv')
summary(lab4.data)
dim(lab4.data)
names(lab4.data)
summary(lab4.data)
head(lab4.data)
names(lab4.data)
m1 <- glm(obesity ~ smoke + gender + education + race,
family=binomial, data=lab4.data)
m1 <- glm(obesity ~ smoke + gender + edu + race,
family=binomial, data=lab4.data)
m1 <- glm(obesity ~ smoke + gender + edu + race,
family=binomial, data=lab4.data)
summary(m1)
m1 <- glm(obesity ~ smoke + gender + edu + race,
family=binomial, data=lab4.data)
exp(summary(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race,
family=binomial, data=lab4.data)
summary(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race,
family=binomial, data=lab4.data)
summary(m1)
exp(coefficients(m1))
exp(confint(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race + bmi,
family=binomial, data=lab4.data)
summary(m1)
exp(coefficients(m1))
exp(confint(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race + bmi,
family=binomial, data=lab4.data)
summary(m1)
#exp(coefficients(m1))
#exp(confint(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race ,
family=binomial, data=lab4.data)
summary(m1)
#exp(coefficients(m1))
#exp(confint(m1))
m1 <- glm(obesity ~ smoke + gender + edu + race ,
family=binomial, data=lab4.data)
summary(m1)
exp(coefficients(m1))
exp(confint(m1))
iptw <- ipwpoint(exposure = smoke ,family = "binomial",
link = "logit", numerator = ~ 1, denominator = ~ age,
data = lab4)
iptw <- ipwpoint(exposure = smoke ,family = "binomial",
link = "logit", numerator = ~ 1, denominator = ~ age,
data = lab4.data)
summary(iptw$ipw.weights)
ipwplot(weights = iptw$ipw.weights, logscale = FALSE,main = "Stabilized weights")
m1 <- glm(obesity ~ smoke + gender + edu + age + race ,
family=binomial, data=lab4.data)
summary(m1)
exp(coefficients(m1))
exp(confint(m1))
iptw <- ipwpoint(exposure = smoke ,family = "binomial",
link = "logit", numerator = ~ 1, denominator = ~ gender +
edu + race + age, data = lab4.data)
summary(iptw$ipw.weights)
ipwplot(weights = iptw$ipw.weights, logscale = FALSE,main = "Stabilized weights")
View(lab4.data)
ipwplot(weights = iptw$ipw.weights, logscale = FALSE,main = "Stabilized weights")
#Examine numerator and denominator models.
summary(iptw$num.mod)
summary(iptw$den.mod)
summary(iptw$num.mod)
summary(iptw$den.mod)
summary(lab4.data)
table(lab4.data$race, lab4$edu)
table(lab4.data$race, lab4.data$edu)
lab4.data$sw <- iptw$ipw.weights
msm <- (svyglm(obesity ~ smoking, design = svydesign(~ 1, weights = ~ ipw.weights,
data = lab4.data)))
install.packages("svyglm")
msm <- (svyglm(obesity ~ smoking, design = svydesign(~ 1, weights = ~ ipw.weights,
data = lab4.data)))
library(svyglm)
install.packages("svyglm")
require("survey")
install.packages("survey")
library(survey)
msm <- (svyglm(obesity ~ smoking, design = svydesign(~ 1, weights = ~ ipw.weights,
data = lab4.data)))
msm <- (svyglm(obesity ~ smoking, design = svydesign(~ 1, weights = ~ sw,
data = lab4.data)))
msm <- (svyglm(obesity ~ smoking, design = svydesign(~ 1, weights = ~ sw,
data = lab4.data)))
View(lab4.data)
msm <- (svyglm(obesity ~ smoke, design = svydesign(~ 1, weights = ~ sw,
data = lab4.data)))
coef(msm)
confint(msm)
msm <- (svyglm(obesity ~ smoke, design = svydesign(~ 1, weights = ~ sw,
data = lab4.data)))
coef(m1)
confint(m1)
coef(msm)
confint(msm)
m1$coefficients
m1$coefficients$smoke
m1$coefficients[2]
coef(m1[2])
confint(m1['2'])
m1$coefficients[2]
confint(m1[2])
confint(m1$coefficients[2])
confint(m1$`coefficients[2])
coefficients <- m1$coefficients
coefficients <- m1$coefficients
coefficients <- data.frame(m1$coefficients)
View(coefficients)
m1$coefficients[2]
confint(m1$coefficients)
m1$coefficients[2]
confint(m1)
confint(m1)
coef(msm)
confint(msm)
m1$coefficients[2]
confint(m1)
coef(msm)
confint(msm)
View(lab4.data)
library(dagitty)
longstudy <- dagify(obesity ~ smoke_t2 + smoke_t1,
smoke_t2 ~ smoke_t1,
exposure = "Smoking in t=2",
outcome = "Obesity",
latent = "background")
library(dagitty)
library(ggdag)
longstudy <- dagify(obesity ~ smoke_t2 + smoke_t1,
smoke_t2 ~ smoke_t1,
exposure = "Smoking in t=2",
outcome = "Obesity",
latent = "background")
longstudy <- dagify(obesity ~ smoke_t2 + smoke_t1,
smoke_t2 ~ smoke_t1)
ggdag(longstudy) +
theme_dag()
longstudy <- dagify(obesity ~ st2 + st1,
st2 ~ st1)
ggdag(longstudy) +
theme_dag()
library(survival)
library(survminer)
install.packages("survminer")
library(survminer)
library(lubridate)
library(ggplot2)
df <- read.csv("~/survival_steven.csv")
View(df)
km_fit <- survfit(Surv(time, hiv) ~ 1, data=df)
summary(km_fit, times = c(1,30,60,90*(1:10)))
summary(km_fit, times = c(6,8,10*(1:10)))
library(survival)
library(survminer)
library(lubridate)
library(survival)
library(ranger)
library(ggplot2)
library(dplyr)
library(ggfortify)
df <- read.csv("~/survival_steven.csv")
km_fit <- survfit(Surv(time, hiv) ~ 1, data=df)
summary(km_fit, times = c(6,8,10*(1:10)))
summary(km_fit, times = c(6,8,10))
load("Z:/cerdam01lab/cerdam01labSpace/PDMP Project/PDMP Project Data/CDC Wonder/Mort2019/Mort19.RData")
library(dplyr)
mort19$StateCounty = paste(mort19$StateOccurrenceFIPS, mort19$CountyOccurrenceFIPS, sep="-")
#First identify ICD10 for opioid deaths.  Returns logical vector
opioidDeathICD10 = trimws(mort19$ICD10Code) %in% c("X40", "X41", "X42", "X43", "X44",
"X60", "X61", "X62", "X63", "X64",
"X85", "Y10", "Y11", "Y12", "Y13",
"Y14")
#Next identify underlying causes of death for PRESCRIPTION opioid deaths in RecordAxisCondition variables
#First subset RecordAxisCondition variables
RAC = mort19[, grepl("^RecordAxisCondition", names(mort19))]
#Next apply over rows to find conditions of interest
syntheticDeathUnderlyingCause = apply(RAC, 1, function(r){
length(intersect(trimws(r), c("T405"))) > 0
})
#Create SYNTHETIC Opioid death indicator as ICD10 and underlying
mort19$CocaineDeath = opioidDeathICD10 & syntheticDeathUnderlyingCause
CocaineDeathsByCounty19 = mort19[,c("StateCounty", "CocaineDeath")] %>%
group_by(StateCounty) %>%
summarize(CocaineDeathCount = sum(CocaineDeath))
CocaineDeathsByCounty19["year"] <- 2019
library(haven)
write_dta(CocaineDeathsByCounty19, "Z:/cerdam01lab/cerdam01labSpace/PDMP Project/PDMP Project Data/CDC Wonder/Unspecified Narcotics/CocaineDeathsByCounty19.dta", version = 14)
write_dta(CocaineDeathsByCounty19, "Z:/cerdam01lab/cerdam01labSpace/PDMP Project/PDMP Project Data/CDC Wonder/Cocaine/CocaineDeathsByCounty19.dta", version = 14)
library (haven)
library(haven)
nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file <- read_sas("C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/raw_data/nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.sas7bdat",
NULL)
View(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file)
View(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file)
View(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file)
library(haven)
nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file <- read_sas("C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/raw_data/nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.sas7bdat",
NULL)
View(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file)
table(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file$GENDER)
table(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file$SPAGE)
table(nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file$SPAGE, nyc_hanes_datasets_and_resources_analytic_data_sets_sas_file$GENDER)
setwd("C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/raw_data")
nyc_hanes <- read_sas("nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.sas7bdat",
NULL)
write_dta(nyc_hanes, file.path(getwd(), "RScripts",
"Data", "nyc_hanes.dta"))
write_dta(nyc_hanes, file.path(getwd(), "RScripts",
"Data", "nyc_hanes.dta"))
write_dta(nyc_hanes, file.path(getwd(), "RScripts",
"Data", "nyc_hanes.dta"))
write_dta("nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.sas7bdat", file.path(getwd(), "RScripts",
"Data", "nyc_hanes.dta"))
nyc_hanes<- read_sas("nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.sas7bdat",
NULL)
write_dta(nyc_hanes,"C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/nyc_hanes.dta"))
write_dta(nyc_hanes,"C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/nyc_hanes.dta")
write_dta(nyc_hanes,"C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/raw_data/nyc_hanes.dta")
write_dta(nyc_hanes,"C:/Users/rivera30/OneDrive - NYU Langone Health/NYC Sexual Behavior/Ariadne/SexBeh_repo/raw_data/nyc-hanes-datasets-and-resources-analytic-data-sets-sas-file.dta")
